name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-push:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/media_bot:latest
            ghcr.io/${{ github.repository_owner }}/media_bot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Update image tag in deployment
        run: sed -i "s|\${GITHUB_OWNER}|${{ github.repository_owner }}|g" k8s/deployment.yaml
      
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
        
      # Alternative: Set up K8s credentials without kubeconfig
      # - name: Configure kubectl
      #   run: |
      #     kubectl config set-cluster k8s --server="${{ secrets.KUBE_API_URL }}"
      #     kubectl config set "clusters.k8s.certificate-authority-data" "${{ secrets.KUBE_CA_DATA }}"
      #     kubectl config set-credentials github --token="${{ secrets.KUBE_TOKEN }}"
      #     kubectl config set-context default --cluster=k8s --user=github
      #     kubectl config use-context default
      
      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s/deployment.yaml 